/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CdcAdminRole;

import business.OrderItem;
import business.enterprise.Enterprise;
import business.organization.DistributorOrganization;
import business.organization.Organization;
import business.userAccount.UserAccount;
import business.workQueue.VaccineRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Smeet
 */
public class ApproveOrderFromPhdJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApproveOrderFromPhdJPanel
     */
    JPanel userProcessContainer;
    //Enterprise parentEnt;
    UserAccount ua;
    Enterprise enterprise;

    public ApproveOrderFromPhdJPanel(JPanel upc, UserAccount ua, Enterprise e) {
        initComponents();
        this.userProcessContainer = upc;
        //this.parentEnt = parentEnt;
        this.enterprise = e;
        this.ua = ua;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) vaccineApproveJTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof VaccineRequest) {
                VaccineRequest vr = (VaccineRequest) wr;
                if (!vr.getStatus().equals("Forwaded To Distributor")) {
                    for (OrderItem oi : vr.getOrder().getOrderItemList()) {

                        Object row[] = new Object[5];
                        row[0] = vr;
                        row[1] = vr.getSender();
                        row[2] = vr.getStatus();
                        row[3] = oi.getQuantity();
                        row[4] = oi.getVaccine().getVacName();
                        dtm.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineApproveJTable = new javax.swing.JTable();
        approveVaccineJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        progressJProgressBar = new javax.swing.JProgressBar();

        setLayout(new java.awt.GridBagLayout());

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(118, 207, 0, 0);
        add(backJButton, gridBagConstraints);

        vaccineApproveJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Sender", "Status", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vaccineApproveJTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 600;
        gridBagConstraints.ipady = 70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(64, 109, 0, 125);
        add(jScrollPane1, gridBagConstraints);

        approveVaccineJButton.setText("Forward To Distributor");
        approveVaccineJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveVaccineJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(47, 45, 0, 0);
        add(approveVaccineJButton, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        jLabel1.setText("   Approve Order");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(54, 85, 0, 0);
        add(jLabel1, gridBagConstraints);

        progressJProgressBar.setStringPainted(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 168;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(115, 34, 324, 125);
        add(progressJProgressBar, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void approveVaccineJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveVaccineJButtonActionPerformed
        // TODO add your handling code here:
        VaccineRequest vacReq;
        int selectedRow = vaccineApproveJTable.getSelectedRow();
        if (selectedRow >= 0) {
            vacReq = (VaccineRequest) vaccineApproveJTable.getValueAt(selectedRow, 0);
            // int oi = (Integer)vaccineApproveJTable.getValueAt(selectedRow, 4);
           // vacReq.setReceiver(ua);
            vacReq.setStatus("Forwaded To Distributor");
            vacReq.setRequestedVaccine("Vaccine Accepted");
          //  vacReq.setSender(ua);
            // vacReq.setQuantity(oi);

            Organization foundOrg = null;
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof DistributorOrganization) {
                    foundOrg = org;
                    break;
                }
            }
            if (foundOrg != null) {
                foundOrg.getWorkQueue().getWorkRequestList().add(vacReq);
                ua.getWorkQueue().getWorkRequestList().add(vacReq);
                progressJProgressBar.setValue(60);
                populateTable();
            }
        }
    }//GEN-LAST:event_approveVaccineJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveVaccineJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar progressJProgressBar;
    private javax.swing.JTable vaccineApproveJTable;
    // End of variables declaration//GEN-END:variables
}
