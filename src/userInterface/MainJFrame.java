/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.EcoSystem;
import business.dbO4Util.DbO4Util;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.userAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author Smeet
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private EcoSystem system;
    private DbO4Util dB4OUtil = DbO4Util.getInstance();

    public MainJFrame() {
        initComponents();
        system = dB4OUtil.retrieveSystem();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        loginJButton = new javax.swing.JButton();
        passwordJPasswordField = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        logoutJButton = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(160);

        loginJButton.setText("Login");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Password");

        usernameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameJTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("User Name");

        logoutJButton.setText("Logout");
        logoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoutJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(loginJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordJPasswordField)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(loginJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(logoutJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(449, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        userProcessContainer.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe Script", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(243, 181, 66));
        jLabel3.setText("       National Vaccine Distribution");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/vaccines-full (1).jpg"))); // NOI18N
        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(585, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE))
        );

        userProcessContainer.add(jPanel2, "card3");

        jSplitPane1.setRightComponent(userProcessContainer);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed
        // Get user name
        String userName = usernameJTextField.getText();
        // Get Password
        char[] passwordCharArray = passwordJPasswordField.getPassword();
        String password = String.valueOf(passwordCharArray);

        //Step1 : check whether systemlevel useraccount exists in the system
        UserAccount ua = system.getUserAccountDirectory().authenticateUser(userName, password);

        Enterprise inEnterprise = null;
        Organization inOrganization = null;
        Network inNetwork = null;
        Organization Parentorg = null;
        Enterprise parentEnt = null;

        if (ua == null) {

            //Step 2: if not, check whether it exists Enterprise UserAccountDirectory
            for (Network n : system.getCountryList()) {
                // ua = n.getUserAccountDirectory().authenticateUser(userName, password);
               // System.out.println(n.getName());
                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                    ua = e.getUserAccountDirectory().authenticateUser(userName, password);
                  // System.out.println(e.getName());
                    if (ua == null) {
                        //Step3 : if not, check whether it exists in Organiation UserAccountDirectory

                        for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                            ua = org.getUserAccountDirectory().authenticateUser(userName, password);
                           // System.out.println(org.getName());
                            if (ua != null) {
                                inEnterprise = e;
                               // System.out.println(org.getName());
                                inOrganization = org;
                                //System.out.println("in org");
                                break;

                            }

                            if (ua == null) {
                                for (Organization o : org.getOrganizationDirectory().getOrganizationList()) {
                                    ua = o.getUserAccountDirectory().authenticateUser(userName, password);
                                   // System.out.println(o.getName());
                                    if (ua != null) {
                                        inEnterprise = e;
                                        inOrganization = o;
                                        break;
                                    }
                                }
                            }
                            if(inOrganization!=null){
                                break;
                            }
                        }
                    } else {
                        inEnterprise = e;
                        inNetwork = n;
                        //System.out.println("in enterprise");
                        break;

                    }
                    if (inOrganization != null) {
                        break;
                    }

                }
                if (inEnterprise != null) {
                    inNetwork = n;
                    break;
                }

            }

            for (Network n : system.getCountryList()) {
                System.out.println(n.getName());
                for (Network n1 : n.getStateList()) {
                    System.out.println(n1.getName());
                    // ua = n.getUserAccountDirectory().authenticateUser(userName, password);
                    if (ua == null) {
                        for (Enterprise e : n1.getEnterpriseDirectory().getEnterpriseList()) {
                             System.out.println(e.getName());
                            ua = e.getUserAccountDirectory().authenticateUser(userName, password);
                            if (ua == null) {
                                //Step3 : if not, check whether it exists in Organiation UserAccountDirectory

                                for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                                    ua = org.getUserAccountDirectory().authenticateUser(userName, password);

                                    if (ua != null) {
                                        inEnterprise = e;
                                        inOrganization = org;
                                        inNetwork=n;
                                        //parentEnt = n.getEnterpriseDirectory().getEnterpriseList().get(0);
                                       // System.out.println(parentEnt.getName());
                                        break;

                                    }

                                    if (ua == null) {
                                        for (Organization o1 : org.getOrganizationDirectory().getOrganizationList()) {
                                            ua = o1.getUserAccountDirectory().authenticateUser(userName, password);

                                           // inEnterprise = n1.getEnterpriseDirectory().getEnterpriseList().get(0);
                                            if (ua != null) {
                                                inEnterprise = n.getEnterpriseDirectory().getEnterpriseList().get(0);
                                                //System.out.println(inEnterprise.getName());
                                                parentEnt = e;
                                               // System.out.println(e.getName());
                                                inOrganization = o1;
                                                
                                                Parentorg = org;
                                                //System.out.println("in clinic");
                                                break;
                                            }
                                        }
                                    }

                                }

                            } else {
                                inEnterprise = e;
                                inNetwork = n1;
                                parentEnt = n.getEnterpriseDirectory().getEnterpriseList().get(0);
                                break;
                            }
                            if (inOrganization != null) {
                                break;
                            }

                        }
                        if (inEnterprise != null) {
                           // parentEnt = n.getEnterpriseDirectory().getEnterpriseList().get(0);
                            break;
                        }
                    }
                }
                
                
            }
        }

        if (ua == null) {
            JOptionPane.showMessageDialog(null, "Invalid Credentials");

        } else {
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("WorkArea", ua.getRole().createWorkArea(userProcessContainer, ua, inOrganization, inEnterprise, system, inNetwork, Parentorg,parentEnt));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_loginJButtonActionPerformed

    private void usernameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameJTextFieldActionPerformed

    private void logoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.removeAll();
        usernameJTextField.setText(null);
        passwordJPasswordField.setText(null);

        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_logoutJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton loginJButton;
    private javax.swing.JButton logoutJButton;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JPanel userProcessContainer;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
